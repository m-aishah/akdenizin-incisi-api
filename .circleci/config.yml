version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:20.5 # Use a Node.js Docker image
    working_directory: ~/app

  db-executor:
    docker:
      - image: circleci/node:lts
      - image: mysql:5.7
        command: --sql_mode="NO_ENGINE_SUBSTITUTION"
        environment:
          MYSQL_DATABASE: "akdenizin_incisi_api_db"
          MYSQL_USER: "user"
          MYSQL_PASSWORD: "password"
          MYSQL_ROOT_PASSWORD: "password"
    working_directory: ~/app

jobs:
  lint-and-test:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            - v2-dependencies-
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Run Lint
          command: npm run lint
      - run:
          name: Run Tests
          command: npm run test
  # db-setup-and-test:
  #   executor: db-executor
  #   steps:
  #     - checkout
  #     - run: sudo apt-get update && sudo apt-get install default-mysql-server
  #     - run: mysql -uroot -ppassword -h127.0.0.1 -e "CREATE DATABASE IF NOT EXISTS akdenizin_incisi_api_db;"
  #     - run: mysql -uroot -ppassword -h127.0.0.1 akdenizin_incisi_api_db < ./database/database-schema.sql
  #     - run: node node_modules/db-migrate/bin/db-migrate up --config ./database/test-database.json -e test
  #     - run: mysql -uroot -ppassword -h127.0.0.1 akdenizin_incisi_api_db < ./database/seed-data.sql
  #     - run:
  #         name: Run Integration Tests
  #         command: npm run integration-test
  #         environment:
  #           DB_NAME: akdenizin_incisi_api_db
  #           DB_USER: root
  #           DB_HOST: 127.0.0.1
  #           DB_PASSWORD: password

workflows:
  version: 2
  main:
    jobs:
      - lint-and-test
      # - db-setup-and-test
